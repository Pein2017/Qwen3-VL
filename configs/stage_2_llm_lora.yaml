extends: base.yaml

# Stage 2: LoRA on LLM, freeze ViT; fully train MLP aligner

model:
  model: output/10-30/stage_1_from_base/v2-20251025-140114/eff_batch_64-per_image_2-from_base/checkpoint-200

# Use model's native chat template; max length unified via base.yaml or global_max_length

tuner:
  train_type: lora
  use_swift_lora: false  # Use PEFT backend for better compatibility
  freeze_llm: false      # Enable LoRA on LLM last-2 layers only (see target_regex below)
  freeze_vit: true       # Freeze vision tower completely
  freeze_aligner: true   # Freeze aligner itself, but train it via modules_to_save
  target_modules: [all-linear]
  # Apply LoRA only to last 2 LLM layers (34|35) for 4B model
  # This regex targets: language_model.layers.{34,35}.{self_attn,mlp}.*
  target_regex: '^(?:model\.)?language_model\.layers\.(?:32|33|34|35)\.(?:self_attn\.(?:q_proj|k_proj|v_proj|o_proj)|mlp\.(?:gate_proj|up_proj|down_proj))$'
  # CRITICAL: modules_to_save does NOT support ModuleList - must specify individual elements
  # Qwen3-VL has: model.visual.merger (single module) + deepstack_merger_list (ModuleList with 3 elements)
  # These modules will be FULLY fine-tuned (not LoRA)
  modules_to_save:
    - model.visual.merger
    - model.visual.deepstack_merger_list.0
    - model.visual.deepstack_merger_list.1
    - model.visual.deepstack_merger_list.2
  lora_rank: 8
  lora_alpha: 16
  lora_dropout: 0.1
  lora_bias: none

training:
  output_dir: ./output/10-30/stage_2_llm_lora
  run_name: lora_8_16-5e-4-eff_batch_32-last_4
  per_device_train_batch_size: 1

  save_only_model: true
  optimizer: multimodal
  learning_rate: 5.0e-4
  vit_lr: 2.0e-5
  aligner_lr: 2.0e-4
  num_train_epochs: 10

  gradient_accumulation_steps: 2

  # Verbose logging
  logging_dir: ./tb/10-30-stage_2

 data:
  dataset_num_proc: 8
  dataloader_num_workers: 8

custom:
  augment_prob: 0.0
  images_per_user_turn: 2
  dump_conversation_text: false
